<!--
  vsp.htm: Web plugin for hook /dashboard:body.pre
    - add button to activate/deactivate vsp
    - add indicator to show current vsp state
  
  Requires module plugin: vsp.js
  
  Version 1.0  Michael Balzer <dexter@dexters-web.de>
-->

<style>
    #vsp {
        margin: 10px 8px 0;
    }
    #vsp .indicator > .label {
        font-size: 130%;
        line-height: 160%;
        margin: 0px;
        padding: 10px;
        display: block;
        border-radius: 50px;
    }
</style>

<div class="receiver" id="vsp" style="display: none">
    <form>
        <div class="form-group">
            <div class="col-xs-6">
                <div class="indicator indicator-vsp">
                    <span class="label label-default">vsp</span>
                </div>
            </div>
            <div class="col-xs-6">
                <div
                    class="btn-group btn-group-justified action-vsp-set"
                    data-toggle="buttons"
                >
                    <label class="btn btn-default action-vsp-0"
                        ><input type="radio" name="vsp" value="0" />OFF</label
                    >
                    <label class="btn btn-default action-vsp-1"
                        ><input
                            type="radio"
                            name="vsp"
                            value="1"
                        />ON/AUTO</label
                    >
                </div>
                <samp id="action-vsp-output" class="text-center"></samp>
            </div>
        </div>
    </form>
</div>

<script>
    (function () {
        var vsp = { config: {}, state: { on: 0, port: 0 } };
        var $indicator = $('#vsp .indicator-vsp > .label');
        var $actionset = $('#vsp .action-vsp-set > label');

        // State & UI update:
        function update(data) {
            $.extend(true, vsp, data);
            // update indicator:
            if (vsp.state.port) {
                $indicator
                    .removeClass('label-default')
                    .addClass('label-danger');
            } else {
                $indicator
                    .removeClass('label-danger')
                    .addClass('label-default');
            }
            // update buttons:
            $actionset.removeClass('active');
            $actionset
                .find('input[value=' + vsp.state.on + ']')
                .prop('checked', true)
                .parent()
                .addClass('active');
        }

        // Listen to vsp events:
        $('#vsp').on('msg:event', function (e, event) {
            if (event == 'usr.vsp.on') {
                update({ state: { port: 1 } });
            } else if (event == 'usr.vsp.off') {
                update({ state: { port: 0 } });
            } else if (event == 'vehicle.off') {
                update({ state: { on: 0 } });
                $('#action-vsp-output').empty();
            }
        });

        // Button action:
        $('#vsp .action-vsp-set input').on('change', function (e) {
            vsp.state.on = $(this).val();
            loadcmd(
                'script eval vsp.set(' + vsp.state.on + ')',
                '#action-vsp-output'
            );
        });

        // Init & install:
        $('#main').one('load', function (ev) {
            loadcmd('script eval vsp.info()').then(function (output) {
                update(JSON.parse(output));
                $('#vsp').appendTo('#panel-dashboard .panel-body').show();
            });
        });
    })();
</script>
